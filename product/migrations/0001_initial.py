# Generated by Django 2.1 on 2018-08-06 15:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='属性')),
            ],
        ),
        migrations.CreateModel(
            name='Attribute_group',
            fields=[
                ('attribute_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='属性组')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category/', verbose_name='图片')),
                ('top', models.BooleanField(default=False, help_text='只适用顶层分类', verbose_name='置顶')),
                ('column', models.IntegerField(default=1, help_text='拥有多少层子分类', verbose_name='子分类')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
                ('status', models.BooleanField(default=True, help_text='开启或者关闭分类', verbose_name='ON/OFF')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('date_mofified', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('parend', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.Category', verbose_name='父类')),
            ],
        ),
        migrations.CreateModel(
            name='Category_description',
            fields=[
                ('category_description_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='类名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='详情')),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='META TITLE')),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='META TITLE')),
                ('meta_keyword', models.CharField(blank=True, max_length=255, null=True, verbose_name='META KEYWORD')),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.Category', verbose_name='分类')),
            ],
        ),
        migrations.CreateModel(
            name='Category_filter',
            fields=[
                ('category_filter_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.Category', verbose_name='分类')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='包括地级市/县级市/自治区直辖县级市', max_length=5, verbose_name='城市')),
            ],
        ),
        migrations.CreateModel(
            name='Customer_activity',
            fields=[
                ('customer_activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(blank=True, max_length=128, null=True, verbose_name='KEY')),
                ('data', models.CharField(blank=True, max_length=254, null=True, verbose_name='DATA')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='Customer_affiliate',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('company', models.CharField(blank=True, max_length=254, null=True, verbose_name='公司')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('website', models.URLField(blank=True, null=True, verbose_name='站点')),
                ('tracking', models.CharField(blank=True, max_length=64, null=True, verbose_name='Tracking code')),
                ('commission', models.IntegerField(default=5, verbose_name='佣金')),
                ('bank_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='银行')),
                ('bank_account_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='银行账户名称')),
                ('bank_account_number', models.IntegerField(blank=True, max_length=19, null=True, verbose_name='银行帐号码')),
                ('status', models.BooleanField(default=True, verbose_name='启用/关闭')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('create_ip', models.GenericIPAddressField(blank=True, editable=False, null=True, verbose_name='IP地址')),
                ('integral', models.IntegerField(blank=True, null=True, verbose_name='积分')),
                ('Customer_activity', models.OneToOneField(on_delete=django.db.models.deletion.SET_NULL, to='product.Customer_activity', verbose_name='客户足迹')),
            ],
        ),
        migrations.CreateModel(
            name='Customer_group',
            fields=[
                ('customer_group', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='客户组')),
                ('description', models.CharField(blank=True, max_length=254, null=True, verbose_name='描述')),
            ],
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('download_id', models.AutoField(primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255, verbose_name='文件名')),
                ('mask', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=40, populate_from=models.CharField(max_length=255, verbose_name='文件名'), unique=True, verbose_name='掩码')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='Download_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='下载名称')),
                ('download', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Download', verbose_name='下载')),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('filter_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='文本')),
            ],
        ),
        migrations.CreateModel(
            name='Filter_group',
            fields=[
                ('filter_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=54, verbose_name='filter group')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, verbose_name='语言')),
                ('code', models.CharField(max_length=254, verbose_name='Code')),
                ('locale', models.CharField(max_length=254, verbose_name='当地')),
                ('image', models.ImageField(blank=True, null=True, upload_to='language/', verbose_name='图片')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Municipal_district',
            fields=[
                ('municipal_district_id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.ForeignKey(help_text='直辖区，县级市', on_delete=django.db.models.deletion.CASCADE, to='product.City', verbose_name='城市')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='text')),
            ],
        ),
        migrations.CreateModel(
            name='Option_value',
            fields=[
                ('option_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='选项值')),
                ('image', models.ImageField(blank=True, null=True, upload_to='option/')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Option', verbose_name='选项名')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=64, verbose_name='型号')),
                ('sku', models.CharField(blank=True, max_length=64, null=True, verbose_name='SKU')),
                ('upc', models.CharField(blank=True, max_length=12, null=True, verbose_name='UPC')),
                ('ean', models.CharField(blank=True, max_length=14, null=True, verbose_name='EAN')),
                ('jan', models.CharField(blank=True, max_length=13, null=True, verbose_name='JAN')),
                ('isbn', models.CharField(blank=True, max_length=17, null=True, verbose_name='ISBN')),
                ('mpn', models.CharField(blank=True, max_length=64, null=True, verbose_name='MPN')),
                ('quantity', models.IntegerField(blank=True, default=1000, null=True, verbose_name='库存')),
                ('stock_status_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='商铺id')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_image/', verbose_name='主图')),
                ('shipping', models.BooleanField(default=True, verbose_name='运送')),
                ('price', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True, verbose_name='价格')),
                ('Promotion_Rate', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True, verbose_name='促销价')),
                ('tax_class_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='税收')),
                ('date_available', models.DateField(default=django.utils.timezone.now, verbose_name='可用日期')),
                ('weight', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True, verbose_name='重量')),
                ('weight_class_id', models.CharField(choices=[('Kilogram', '公斤'), ('Gram', '公克'), ('Pound', '磅 '), ('Ounce', '盎司')], default='Kilogram', max_length=8, verbose_name='重量单位')),
                ('length', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True, verbose_name='长')),
                ('width', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True, verbose_name='宽')),
                ('height', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True, verbose_name='高')),
                ('length_class_id', models.CharField(choices=[('Centimeter', '厘米'), ('Millimeter', '毫米'), ('Inch', '英寸')], default='Centimeter', max_length=10, verbose_name='长度单位')),
                ('sort_order', models.IntegerField(blank=True, default=0, null=True, verbose_name='商品排序')),
                ('status', models.BooleanField(default=True, verbose_name='商品状态')),
                ('viewed', models.IntegerField(blank=True, default=0, null=True, verbose_name='浏览量')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('language_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.Language', verbose_name='语言')),
                ('location', models.ForeignKey(blank=True, help_text='指定商品在某一个地区显示，不指定则全部显示', null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.City', verbose_name='区域')),
                ('manufacturer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.Manufacturer', verbose_name='生产厂家')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
                'db_table': 'world_product',
            },
        ),
        migrations.CreateModel(
            name='Product_attribute_value',
            fields=[
                ('product_attribute_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=100, verbose_name='文本')),
                ('attribute_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Attribute', verbose_name='属性文本')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category', verbose_name='分类')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_description',
            fields=[
                ('product_description_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, verbose_name='商品名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='商品详情')),
                ('tag', models.CharField(max_length=254, blank=True, null=True, verbose_name='标签')),
                ('meta_title', models.CharField(max_length=254, blank=True, null=True, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('meta_keyword', models.CharField(max_length=254, blank=True, null=True, verbose_name='Meta Keyword')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_discount',
            fields=[
                ('product_discount_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='product.Customer_group', verbose_name='客户组')),
            ],
        ),
        migrations.CreateModel(
            name='Product_download',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('download', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Download', verbose_name='下载')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_filter',
            fields=[
                ('product_filter_id', models.AutoField(primary_key=True, serialize=False)),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Filter', verbose_name='filter')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_image',
            fields=[
                ('product_image_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='product_image/', verbose_name='商品图')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_option',
            fields=[
                ('product_option_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='库存')),
                ('subtract', models.BooleanField(default=True, help_text='是否支持使用优惠券，默认支持', verbose_name='Subtract Stock')),
                ('price', models.DecimalField(decimal_places=10, max_digits=19, verbose_name='Price')),
                ('integral', models.IntegerField(blank=True, help_text='1积分等于RMB一元，客户可用于积分抵扣', null=True, verbose_name='积分')),
                ('option_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Option_value', verbose_name='选项值')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_related',
            fields=[
                ('product_related', models.AutoField(primary_key=True, serialize=False)),
                ('related_name', models.CharField(max_length=256, verbose_name='关联商品')),
                ('related_id', models.IntegerField(verbose_name='关联ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Special',
            fields=[
                ('special_id', models.AutoField(primary_key=True, serialize=False)),
                ('priority', models.IntegerField(default=0, verbose_name='优先级')),
                ('price', models.DecimalField(decimal_places=9, max_digits=19, verbose_name='Price')),
                ('Date_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='开始时间')),
                ('Date_end', models.DateTimeField(default=django.utils.timezone.now, verbose_name='结束时间')),
                ('customer_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Customer_group', verbose_name='特价客户群体')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product', verbose_name='商品')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('province_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10, verbose_name='省/直辖市/特别行政区')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_discount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='product.Product_discount', verbose_name='折扣'),
        ),
        migrations.AddField(
            model_name='filter',
            name='filter_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Filter_group', verbose_name='filter group'),
        ),
        migrations.AddField(
            model_name='download_description',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.Language', verbose_name='语言'),
        ),
        migrations.AddField(
            model_name='customer_affiliate',
            name='customer_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='product.Customer_group', verbose_name='客户组'),
        ),
        migrations.AddField(
            model_name='customer_affiliate',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Province', verbose_name='省份'),
        ),
        migrations.AddField(
            model_name='category_filter',
            name='filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='product.Filter', verbose_name='过滤标签'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attribute_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Attribute_group', verbose_name='属性组'),
        ),
    ]
